#!/usr/bin/python3
"""
Configure the aboot parameters

Configures the aboot parameters in /boot/aboot.cfg
"""


import os
import sys
import shlex

import osbuild.api


SCHEMA = """
"additionalProperties": false,
"properties": {
  "pagesize": {
    "description": "Page size",
    "type": "string"
  },
  "base": {
    "description": "Base",
    "type": "string"
  },
  "kernel_offset": {
    "description": "Kernel offset",
    "type": "string"
  },
  "partition_a": {
    "description": "Aboot partition a",
    "type": "string"
  },
  "partition_b": {
    "description": "Aboot partition b",
    "type": "string"
  },
  "ramdisk_offset": {
    "description": "Ramdisk offset",
    "type": "string"
  },
  "tags_offset": {
    "description": "Tags offset",
    "type": "string"
  },
  "second_offset": {
    "description": "Second stage offset",
    "type": "string"
  },
  "dtb_offset": {
    "description": "DTB offset",
    "type": "string"
  },
  "dtb_file": {
    "description": "Dtb file",
    "type": "string"
  },
  "cmdline": {
    "description": "Kernel commandline",
    "type": "string"
  },
  "preptree": {
    "description": "True if we are preparing an ostree layout",
    "type": "boolean",
    "default": false
  }
}
"""

def main(tree, options):
    pagesize = options.get("pagesize", "")
    base = options.get("root_fs_uuid", "")
    kernel_offset = options.get("kernel_offset", "")
    partition_a = options.get("partition_a", "")
    partition_b = options.get("partition_b", "")
    ramdisk_offset = options.get("ramdisk_offset", "")
    tags_offset = options.get("tags_offset", "")
    second_offset = options.get("second_offset", "")
    dtb_offset = options.get("dtb_offset", "")
    dtb_file = options.get("dtb_file", "")
    cmdline = options.get("cmdline", "")
    preptree = options.get("preptree", False)

    params = []

    if pagesize:
        params += [f"PAGESIZE={shlex.quote(pagesize)}"]
    if base:
        params += [f"BASE={shlex.quote(base)}"]
    if kernel_offset:
        params += [f"KERNEL_OFFSET={shlex.quote(kernel_offset)}"]
    if partition_a:
        params += [f"PARTITION_A={shlex.quote(partition_a)}"]
    if partition_b:
        params += [f"PARTITION_B={shlex.quote(partition_b)}"]
    if ramdisk_offset:
        params += [f"RAMDISK_OFFSET={shlex.quote(ramdisk_offset)}"]
    if tags_offset:
        params += [f"TAGS_OFFSET={shlex.quote(tags_offset)}"]
    if second_offset:
        params += [f"SECOND_OFFSET={shlex.quote(second_offset)}"]
    if dtb_offset:
        params += [f"DTB_OFFSET={shlex.quote(dtb_offset)}"]
    if dtb_file:
        params += [f"DTB_FILE={shlex.quote(dtb_file)}"]
    if cmdline:
        params += [f"CMDLINE={shlex.quote(cmdline)}"]

    if preptree:
        base = os.path.join(tree, "usr/lib/ostree-boot")
    else:
        base = os.path.join(tree, "boot")

    os.makedirs(base, exist_ok=True)

    with open(f"{base}/aboot.cfg", "w") as f:
        f.write("\n".join(filter(len, params)))

    return 0

if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
